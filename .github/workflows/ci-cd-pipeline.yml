name: CI/CD Pipeline for Spectre Insights

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  # Job to install, lint, and test the frontend
  frontend:
    runs-on: ubuntu-latest
    name: Frontend Build, Lint, and Test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Node.js for Frontend
        uses: actions/setup-node@v4
        with:
          node-version: '20.16.0'
          cache: 'npm'

      - name: Install Frontend Dependencies
        run: |
          cd frontend
          npm ci

      - name: Lint Frontend Code
        run: |
          cd frontend
          npm run lint

      - name: Run Frontend Tests
        run: |
          cd frontend
          npm run test

      - name: Build Frontend for Production
        run: |
          cd frontend
          npm run build

      - name: Upload Frontend Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/.output

  # Job to install, lint, and test the backend
  backend:
    runs-on: ubuntu-latest
    name: Backend Lint, Test, and Docker Build
    services:
      mongo:
        image: mongo:6.0
        ports:
          - 27017:27017

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Node.js for Backend
        uses: actions/setup-node@v4
        with:
          node-version: '20.16.0'
          cache: 'npm'

      - name: Install Backend Dependencies
        run: |
          cd backend
          npm ci

      - name: Lint Backend Code
        run: |
          cd backend
          npm run lint

      - name: Run Backend Tests
        run: |
          cd backend
          npm run test

      - name: Build Docker Image for Backend
        run: |
          cd backend
          docker build -t spectre-backend:latest .

  # Optional job to deploy frontend to Vercel/Netlify
  deploy-frontend:
    runs-on: ubuntu-latest
    name: Deploy Frontend to Vercel/Netlify
    needs: frontend
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Deploy to Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          npm install -g vercel
          cd frontend
          vercel --prod --token=$VERCEL_TOKEN

  # Optional job to deploy backend to Heroku/AWS/DigitalOcean
  deploy-backend:
    runs-on: ubuntu-latest
    name: Deploy Backend to Heroku
    needs: backend
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Login to Heroku
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: |
          echo "$HEROKU_API_KEY" | docker login --username=_ --password-stdin registry.heroku.com

      - name: Build and Push Docker Image to Heroku
        run: |
          cd backend
          docker build -t registry.heroku.com/spectre-backend/web .
          docker push registry.heroku.com/spectre-backend/web

      - name: Release Heroku App
        run: |
          heroku container:release web --app spectre-backend
